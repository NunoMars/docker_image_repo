name: 'Docker Image build and push to GitHub Container Registry'
description: 'Builds and pushes Docker image to GitHub Container Registry (ghcr.io) with multi-platform support'
author: nuno marcelino

branding:
  icon: 'cloud'
  color: 'blue'

inputs:
  image-name:
    description: 'Name of the Docker image'
    required: true
  registry:
    description: 'Where to push image'
    default: ghcr.io
    required: false
  username:
    description: 'Username to login to registry'
  password:
    description: 'Token to login'
  tag:
    description: 'Tag to use for the image'
    default: 'latest'

runs:
  using: "composite"
  steps:
  # Set up QEMU for multi-platform builds
  - name: Set up QEMU
    uses: docker/setup-qemu-action@v1

  # Set up Docker Buildx for building multi-platform Docker images
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v1

  # Cache Docker layers to speed up subsequent builds
  - name: Cache Docker layers
    uses: actions/cache@v4.2.0
    with:
      path: /tmp/.buildx-cache
      key: ${{ runner.os }}-buildx-${{ github.sha }}
      restore-keys: |
        ${{ runner.os }}-buildx-

  # Login to GitHub Container Registry
  - name: Login to GitHub Container Registry
    uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}

  # Test just output the message
  - name: Test just output the message
    uses: profy12/lowercase-action@0.6
    id: lowered
    with:
      text: ${{ github.repository }}

  # Build and push Docker image to GitHub Container Registry
  - name: Build and push
    uses: docker/build-push-action@v2
    with:
      context: .  # The context for the Docker build (the directory containing the Dockerfile)
      file: ./Dockerfile  # Path to the Dockerfile
      push: true  # Push the image to the registry after building
      tags: ghcr.io/${{ steps.lowered.outputs.text }}:latest,ghcr.io/${{ steps.lowered.outputs.text }}:latest  # Tags for the image
      platforms: linux/amd64,linux/arm64/v8  # Build for multiple architectures
      cache-from: type=local,src=/tmp/.buildx-cache  # Use local cache for faster builds
      cache-to: type=local,dest=/tmp/.buildx-cache  # Save build cache locally for future builds
